import numpy as np
import pytest

import colorio


@pytest.mark.parametrize(
    "lab,ref",
    [
        # reference values from <https://de.wikipedia.org/wiki/DIN99-Farbraum>
        ([50, 10, 10], [61.42957005065451, 9.69880364042431, 3.763294252305096]),
        ([50, 50, 50], [61.42957005065451, 28.643406598745752, 11.11410967948868]),
        ([50, -10, 10], [61.42957005065451, -5.5659005500400385, 7.028805275354587]),
        ([50, -50, 50], [61.42957005065451, -17.223109841824353, 21.74991885425549]),
        ([50, -10, -10], [61.42957005065451, -9.698803640424204, -3.7632942523051636]),
        ([50, -50, -50], [61.42957005065451, -28.64340659874571, -11.114109679488735]),
        ([50, +50, -10], [61.42957005065451, 24.09788147190708, -8.710194442180885]),
        ([50, +50, -50], [61.42957005065451, 17.2231098418244, -21.749918854255508]),
        ([0, 0, 0], [0.0, 0.0, 0.0]),
        ([100, 0, 0], [100.0, 0.0, 0.0]),
    ],
)
def test_reference_lab(lab, ref):
    print(lab)
    xyz = colorio.cs.CIELAB().to_xyz100(lab)
    cs = colorio.cs.DIN99()
    xyz100 = np.array(xyz)
    val = cs.from_xyz100(xyz100)
    print(f"[{val[0]}, {val[1]}, {val[2]}]")
    assert np.all(np.abs(val - ref) < 1.0e-4 * np.abs(ref) + 1.0e-15)
